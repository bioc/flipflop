TO DO:
o change optim parameter in main flipflop
o check everything ok on windows and os
o take care of all cpp warnings (isolasso+spams)
o change strategy for paired-end graph ???


CHANGES IN VERSION 1.5.8
 --------------------------
    o change default MinCvgCut value from 0.25 to 0.05

CHANGES IN VERSION 1.5.7
 --------------------------
    o correct a stupid error (in flipflop.R) for calculating the total number of mapped fragments in the paired-end case


CHANGES IN VERSION 1.5.6
 --------------------------
MAJOR CHANGES
    o faster single-end and paired-end graph implementation 
    o use_TSSPAS: if yes then start/end bins are the ones with no entering/outgoing junctions (+ annotated ones if given annotation)

MINOR CHANGES
    o remove the sanity-check for possibly duplicated types, as it was solved into readgroup.cpp/getType
    o [pre-processing] back to default 1 for minJuncCount (I changed my mind !!)
    o [pre-processing] cancel change of version 1.3.9 (extreme boundary of segments calculateBound in readgroup.cpp) (I changed my mind !!)


CHANGES IN VERSION 1.5.5
 --------------------------
    o allow more easy 2 steps run (preprocessing+prediction). The option "OnlyPreprocess" allows to perform preprocessing only. It creates two files 'prefix.instance' and (prefix.totalnumread). Running then flipflop with the option preprocess.instance='prefix.instance' performs the prediction (it reads automatically the total number fo reads in prefix.totalnumread)
    o [pre-processing] push the default minJuncCount from 1 to 2 (high enough for a default?) 
    o [pre-processing] slight change for paired-end preprocessing, see option to processsam (--single-only not automatic anymore)
    o start using Rprintf in c/cpp codes for user messages (to continue)


CHANGES IN VERSION 1.5.4
 --------------------------
    o [pre-processing] solve small issue on CIGAR character 'S,X,=' (again!), see align.cpp


CHANGES IN VERSION 1.5.3
 --------------------------
NEW FEATURE

    o [pre-processing] add minJuncCount as an option, ie number of required reads to consider a junction/boundary as valid.

CHANGES IN VERSION 1.5.1
 --------------------------
    o [pre-processing] solve small issue of possibly duplicated read type, see getType in readgroup.cpp

CHANGES IN VERSION 1.3.9
--------------------------
    o [pre-processing] redefine extreme boundary of segments (first and last), see calculateBound in readgroup.cpp

CHANGES IN VERSION 1.3.7
--------------------------
    o solve non-portable flags issues, see Makevars 

CHANGES IN VERSION 1.3.5
--------------------------
    o solve compilation isue on Mavericks (using clang), see Makevars.

CHANGES IN VERSION 1.3.4
--------------------------
    o properly take into account 'S', 'X' and '=' characters (soft clipping, strict mismatch and match) in the CIGAR of the sam file


CHANGES IN VERSION 1.3.2
--------------------------
    o Solve small bugs in the graph construction
    o Update the optimization solver for refit. More accurate and faster!
    o Remove warnings from spams (to continue ...)


CHANGES IN VERSION 1.1.6
--------------------------

NEW FEATURES

    o Add 'expected.counts' in the output objects. 
      It gives the expected raw count (ie number of mapped fragments) for each predicted transcripts. 
      This information is also available in the output gtf file.


CHANGES IN VERSION 1.1.4
--------------------------

NEW FEATURES

    o Add a 'OnlyPreprocess' option for performing only the pre-processing step of the input sam file.  
    This step writes two files: one file named 'prefix.instance' and one other named 'prefix.totalnumread',
    where 'prefix' is the prefix of the input sam file.
    The 'prefix.instance' file can then be given to the option 'preprocess.instance'
    and the total number of mapped reads is stored in the 'prefix.totalnumread' file.

    o Allow to give 'NN' (total number of mapped fragments) even when using the sam file as input.
    This can be used to run flipflop in parallel on parsed sam files with the same NN constant. 


USER-LEVEL CHANGES

    o Handle '~' in input paths with path.expand function.

    o Give a more detailed R output with the read count.


MINOR CHANGES

    o Do not write individual Coverage into the pre-processing file anymore ie, the .instance file.
    (in practice comments lines in readgroup.cpp, part 'toStream')



CHANGES IN VERSION 1.1.2
--------------------------

BUG FIXES

    o Switch from GRangeList to a regular list as the number of metadata columns could not vary in GRangeList.
